name: Deploy Remix Weather App to AKS

on:
  pull_request:
    branches: [main]
    paths:
      - 'app/**'  # Only deploy if app code changes

  push:
    branches: [main]
    paths:
      - 'app/**'

permissions:
  contents: read
  id-token: write

env:
  IMAGE_NAME: cst8918-a01-weather-app
  IMAGE_TAG: latestV2  # âœ… Match what is used in Terraform
  TEST_ACR: final14cst8918testacr
  PROD_ACR: final14cst8918prodacr  # If using separate ACRs

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Azure Login with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set AKS Context
      run: |
        ENV=${{ github.event_name == 'push' && 'prod' || 'test' }}
        az aks get-credentials \
          --resource-group final14cst8918${ENV}-network-rg \
          --name final14cst8918${ENV}-aks-admin \
          --overwrite-existing

    - name: Set Image and ACR Environment Variables
      run: |
        ENV=${{ github.event_name == 'push' && 'prod' || 'test' }}
        echo "ENV=$ENV" >> $GITHUB_ENV
        echo "ACR=final14cst8918${ENV}acr" >> $GITHUB_ENV

    - name: Deploy to AKS
      run: |
        kubectl set image deployment/remix-weather remix-weather=$ACR.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
        kubectl rollout status deployment remix-weather
